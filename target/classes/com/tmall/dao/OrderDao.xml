<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tmall.dao.OrderDao">
    <resultMap id="orderBean" type="Order">
        <id column="oid" property="id"/>
        <result column="orderCode" property="orderCode"/>
        <result column="address" property="address"/>
        <result column="post" property="post"/>
        <result column="receiver" property="receiver"/>
        <result column="mobile" property="mobile"/>
        <result column="userMessage" property="userMessage" />
        <result column="createDate" property="createDate"/>
        <result column="payDate" property="payDate"/>
        <result column="deliveryDate" property="deliveryDate"/>
        <result column="confirmDate" property="confirmDate"/>
        <result column="status" property="status"/>
        <collection property="orderItems" ofType="OrderItem">
            <id column="oiid" property="id"/>
            <result column="number" property="number"/>
            <association property="product" javaType="Product">
                <id column="pid" property="id"/>
                <result column="pname" property="name"/>
                <result column="subTitle" property="subTitle"/>
                <result column="orignalPrice" property="orignalPrice"/>
                <result column="promotePrice" property="promotePrice"/>
                <result column="stock" property="stock"/>
                <result column="pcreateDate" property="createDate"/>
                <result column="salesVolume" property="salesVolume"/>
                <result column="reviewNumber" property="reviewNumber"/>
                <association property="singleImageFirst" javaType="ProductImage">
                    <id column="piid" property="id"/>
                    <result column="type" property="type"/>
                </association>
            </association>
        </collection>
    </resultMap>

    <select id="listOrder" resultMap="orderBean">
        select o.id oid, orderCode, address, post, receiver, mobile,
        userMessage, o.createDate, payDate, deliveryDate, confirmDate,
        status, oi.id oiid, number, reviewNumber, salesVolume,
        p.id pid, p.name pname, p.createDate pcreateDate, p.subTitle,
        p.orignalPrice, p.promotePrice, p.stock, piid, type
        from order_ o left join orderItem oi on o.id = oi.oid
        left join product p on p.id = oi.pid
        LEFT JOIN (
            SELECT
            pid,
            count(*) reviewNumber
            FROM
            review
            WHERE
            pid IN (
            SELECT
            pid
            FROM
            orderItem
            )
            GROUP BY
            pid
            ) temp ON temp.pid = p.id
        LEFT JOIN (
            SELECT
                p.id pid,
                sum(number) salesVolume
            FROM
                product p
            LEFT JOIN orderItem oi ON oi.pid = p.id
            LEFT JOIN order_ o ON o.id = oi.oid
            WHERE
            (
                o. STATUS = 'evaluate'
                OR o. STATUS = 'accomplish'
            )
            AND p.id IN (
                SELECT
                pid
                FROM
                orderItem
            )
            GROUP BY
                pid
            ) temp1 ON temp1.pid = p.id
        LEFT JOIN (
            SELECT
                pid,
                pi.id piid,
                type
            FROM
                productImage pi
            WHERE
                pid IN (
            SELECT
                pid
            FROM
                orderItem
            )
            AND type = 'singleImage'
            GROUP BY
                pid
        ) temp2 ON temp2.pid = p.id
        <where>
            <if test="user != null">
                and oi.uid = #{user.id}
            </if>
            <if test="status != null">
                and o.status = #{status}
            </if>
        </where>
        order by o.id desc
    </select>
    
    <update id="orderDeliver" parameterType="Order">
        update order_ set deliveryDate = #{deliveryDate}, status = 'waitTake' where id = #{id};
    </update>

    <insert id="addOrder" parameterType="Order" useGeneratedKeys="true" keyColumn="id" keyProperty="id">
        insert into order_(orderCode, address, post, receiver, mobile, userMessage, createDate, uid, status)
        values(#{orderCode}, #{address}, #{post}, #{receiver}, #{mobile}, #{userMessage}, #{createDate}, #{user.id}, #{status})
    </insert>

    <select id="checkUserOrderLegal" resultType="int" parameterType="map">
        select count(*) from order_ where id = #{id} and uid = #{uid} and status = #{status}
    </select>

    <select id="queryOrder" resultMap="orderBean" parameterType="Order">
        SELECT
            o.id oid,
            orderCode,
            address,
            post,
            receiver,
            mobile,
            userMessage,
            o.createDate,
            payDate,
            deliveryDate,
            confirmDate,
            STATUS,
            oi.id oiid,
            number,
            p.id pid,
            p.name pname,
            p.createDate pcreateDate,
            p.subTitle,
            p.orignalPrice,
            p.promotePrice,
            p.stock,
            salesVolume,
            reviewNumber,
            piid,
            type
        FROM
            order_ o
        LEFT JOIN orderItem oi ON o.id = oi.oid
        LEFT JOIN product p ON oi.pid = p.id
        LEFT JOIN (
            SELECT
                p.id pid,
                sum(number) salesVolume
            FROM
                product p
            LEFT JOIN orderItem oi ON oi.pid = p.id
            LEFT JOIN order_ o ON o.id = oi.oid
            WHERE
                (
                    o. STATUS = 'evaluate'
                    OR o. STATUS = 'accomplish'
                )
            AND p.id IN (
                SELECT
                    pid
                FROM
                    orderItem
                WHERE
                    oid = #{id}
            )
            GROUP BY
                pid
        ) temp ON temp.pid = p.id
        LEFT JOIN (
            SELECT
                pid,
                count(*) reviewNumber
            FROM
                review
            WHERE
                pid IN (
                    SELECT
                        pid
                    FROM
                        orderItem
                    WHERE
                        oid = #{id}
                )
            GROUP BY
                pid
        ) temp2 ON temp2.pid = p.id
        LEFT JOIN (
            SELECT
                pid,
                pi.id piid,
                type
            FROM
                productImage pi
            WHERE
                pid IN (
                    SELECT
                        pid
                    FROM
                        orderItem
                    WHERE
                        oid = #{id}
                )
            AND type = 'singleImage'
            GROUP BY
                pid
        ) temp3 ON temp3.pid = p.id
        WHERE
            o.uid = #{user.id}
        AND o. STATUS = #{status}
        AND o.id = #{id}
    </select>
    
    <update id="updateOrderStatus">
        update order_ set 
        <choose>
            <when test="order.status == 'waitPay'">
                payDate = #{date}, status = 'waitDeliver'
            </when>
            <when test="order.status == 'waitDeliver'">
                deliveryDate = #{date}, status = 'waitTake'
            </when>
            <when test="order.status == 'waitTake'">
                confirmDate = #{date}, status = 'evaluate'
            </when>
            <when test="order.status == 'evaluate'">
                status = 'accomplish'
            </when>
        </choose>
        where id = #{order.id} and uid = #{order.user.id} and status = #{order.status}
    </update>

    <delete id="userOrderDelete">
        delete from order_ where id = #{id} and status in ('accomplish', 'waitPay', 'evaluate');
    </delete>
</mapper>